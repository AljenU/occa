device, real(4) function addTwoNumbers1(a, b)
  implicit none

  real(4), intent(in) :: a, b

  addTwoNumbers1 = a + b

end function addTwoNumbers1

device subroutine addTwoNumbers2(ab, a, b)
  implicit none

  real(4), intent(in)  :: a, b
  real(4), intent(out) :: ab

  ab = a + b

end subroutine addTwoNumbers2

kernel subroutine addVectors(entries, a, b, ab)
  implicit none

  integer(4), intent(in)  :: entries
  real(4)   , intent(in)  :: a(:), b(:)
  real(4)   , intent(out) :: ab(:)

  integer(4), shared    :: sharedVar(16,30)
  integer(4), exclusive :: exclusiveVar

  integer :: group, item, N

  do group = 1, entries, 16, outer0
     do item = 1, 16, inner0
        N = (item + (16 * (group - 1)))

        if (N < entries) then
           ab(i) = a(i) + b(i)
        else if (N < entries) then
           N = 0
        else
           N = 1
        end if

        do while (.TRUE.)
           N = 2
        end do
     end do
  end do

end subroutine addVectors
